<!DOCTYPE html>
<!-- saved from url=(0048)http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">:root{--docsifytabs-border-color:#ededed;--docsifytabs-border-px:1px;--docsifytabs-border-radius-px: ;--docsifytabs-margin:1.5em 0;--docsifytabs-tab-background:#f8f8f8;--docsifytabs-tab-background--active:#fff;--docsifytabs-tab-color:#999;--docsifytabs-tab-color--active:inherit;--docsifytabs-tab-highlight-px:3px;--docsifytabs-tab-highlight-color:var(--theme-color,currentColor);--docsifytabs-tab-padding:0.6em 1em;--docsifytabs-content-background:inherit;--docsifytabs-content-padding:1.5rem}.docsify-tabs:before,.docsify-tabs__tab{z-index:1}.docsify-tabs__tab--active,.docsify-tabs__tab:focus{z-index:2}.docsify-tabs{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative}.docsify-tabs:before{-ms-flex-order:0;content:"";-ms-flex:1 1;flex:1 1;order:0}.docsify-tabs__tab{-ms-flex-order:-1;appearance:none;font-size:inherit;margin:0;order:-1;position:relative}.docsify-tabs__content[class]{height:0;overflow:hidden;position:absolute;visibility:hidden;width:100%}.docsify-tabs__content[class]>:first-child{margin-top:0}.docsify-tabs__content[class]>:last-child{margin-bottom:0}.docsify-tabs__tab--active+.docsify-tabs__content[class]{height:auto;overflow:auto;position:relative;visibility:visible}[class*=docsify-tabs--]{margin:1.5em 0;margin:var(--docsifytabs-margin)}[class*=docsify-tabs--]>.docsify-tabs__tab{background:#f8f8f8;background:#eee;color:#999;color:var(--docsifytabs-tab-color);padding:.6em 1em;padding:var(--docsifytabs-tab-padding)}[class*=docsify-tabs--]>.docsify-tabs__tab--active{background:inherit;background:var(--docsifytabs-tab-background--active);color:inherit;color:var(--docsifytabs-tab-color--active)}[class*=docsify-tabs--]>.docsify-tabs__content{background:inherit;background:#fff}[class*=docsify-tabs--]>.docsify-tabs__tab--active+.docsify-tabs__content{padding:1.5rem;padding:var(--docsifytabs-content-padding)}.docsify-tabs--classic:before,.docsify-tabs--classic>.docsify-tabs__content,.docsify-tabs--classic>.docsify-tabs__tab{border-color:#ededed;border-color:var(--docsifytabs-border-color);border-style:solid;border-width:1px;border-width:var(--docsifytabs-border-px)}.docsify-tabs--classic:before{border-left-width:0;border-right-width:0;border-top-width:0;margin-right:1px;margin-right:var(--docsifytabs-border-px)}.docsify-tabs--classic>.docsify-tabs__tab:first-of-type{border-top-left-radius:var(--docsifytabs-border-radius-px)}.docsify-tabs--classic>.docsify-tabs__tab:last-of-type{border-top-right-radius:var(--docsifytabs-border-radius-px)}.docsify-tabs--classic>.docsify-tabs__tab~.docsify-tabs__tab{margin-left:-1px;margin-left:calc(0px - var(--docsifytabs-border-px))}.docsify-tabs--classic>.docsify-tabs__tab--active{border-bottom-width:0;box-shadow:inset 0 3px 0 0 currentColor;box-shadow:inset 0 var(--docsifytabs-tab-highlight-px) 0 0 var(--docsifytabs-tab-highlight-color)}.docsify-tabs--classic>.docsify-tabs__content{border-radius:0;border-radius:0 var(--docsifytabs-border-radius-px) var(--docsifytabs-border-radius-px) var(--docsifytabs-border-radius-px);border-top:0;margin-top:-1px;margin-top:calc(0px - var(--docsifytabs-border-px))}.docsify-tabs--material>.docsify-tabs__tab{background:transparent;border:0;margin-bottom:2px;margin-bottom:calc(var(--docsifytabs-tab-highlight-px) - var(--docsifytabs-border-px))}.docsify-tabs--material>.docsify-tabs__tab--active{background:transparent;box-shadow:0 3px 0 0 currentColor;box-shadow:0 var(--docsifytabs-tab-highlight-px) 0 0 var(--docsifytabs-tab-highlight-color)}.docsify-tabs--material>.docsify-tabs__content{border-color:#ededed;border-color:var(--docsifytabs-border-color);border-style:solid;border-width:1px 0;border-width:var(--docsifytabs-border-px) 0}</style>
   
   <title>2. BaseSDK (C/C++)</title>
   <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
   <meta name="description" content="Description">
   <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
   <!-- 网页图标，临时使用以后需要替换 -->
   <link rel="shortcut icon" href="http://localhost:3000/favicon.ico">
   <!-- 网页主题布局文件 -->
   <link rel="stylesheet" href="./2. BaseSDK (C_C++)_files/theme-simple.css">
   <!-- 基于主题修改后的布局文件：字号，高亮颜色等 -->
   <link rel="stylesheet" href="./2. BaseSDK (C_C++)_files/main-custom.css">
   <!-- 侧边栏折叠样式 -->
   <link rel="stylesheet" href="./2. BaseSDK (C_C++)_files/sidebar-folder.min.css">
   <style>
      :root {
         --docsifytabs-border-color: #ededed;
         /* --docsifytabs-tab-highlight-color: rgb(0, 255, 0); */
      }
   </style>
<style type="text/css">.docsify-copy-code-button,.docsify-copy-code-button>span{cursor:pointer;transition:all .25s ease}.docsify-copy-code-button{background:grey;background:var(--theme-color,grey);border:0;border-radius:0;color:#fff;font-size:1em;opacity:0;outline:0;overflow:visible;padding:.65em .8em;position:absolute;right:0;top:0;z-index:1}.docsify-copy-code-button>span{background:inherit;border-radius:3px;pointer-events:none}.docsify-copy-code-button>.error,.docsify-copy-code-button>.success{font-size:.825em;opacity:0;padding:.5em .65em;position:absolute;right:0;top:50%;transform:translateY(-50%);z-index:-100}.docsify-copy-code-button.error>.error,.docsify-copy-code-button.success>.success{opacity:1;right:100%;transform:translate(-25%,-50%)}.docsify-copy-code-button:focus,pre:hover .docsify-copy-code-button{opacity:1}.docsify-copy-code-button>[aria-live]{height:1px;left:-10000px;overflow:hidden;position:absolute;top:auto;width:1px}</style><style type="text/css">.medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}</style><style type="text/css">.sidebar-nav > ul > li ul {
  display: none;
}

.app-sub-sidebar {
  display: none;
}

.app-sub-sidebar.open {
  display: block;
}

.sidebar-nav .open > ul:not(.app-sub-sidebar),
.sidebar-nav .active:not(.collapse) > ul {
  display: block;
}

/* 抖动 */
.sidebar-nav li.open:not(.collapse) > ul {
  display: block;
}

.active + ul.app-sub-sidebar {
  display: block;
}
</style><style type="text/css">@media screen and (max-width: 768px) {
  /* 移动端适配 */
  .markdown-section {
    max-width: none;
    padding: 16px;
  }
  /* 改变原来按钮热区大小 */
  .sidebar-toggle {
    padding: 0 0 10px 10px;
  }
  /* my pin */
  .sidebar-pin {
    appearance: none;
    outline: none;
    position: fixed;
    bottom: 0;
    border: none;
    width: 40px;
    height: 40px;
    background: transparent;
  }
}
</style><style>
.sidebar {
  padding-top: 0;
}

.search {
  margin-bottom: 20px;
  padding: 6px;
  border-bottom: 1px solid #eee;
}

.search .input-wrap {
  display: flex;
  align-items: center;
}

.search .results-panel {
  display: none;
}

.search .results-panel.show {
  display: block;
}

.search input {
  outline: none;
  border: none;
  width: 100%;
  padding: 0.6em 7px;
  font-size: inherit;
  border: 1px solid transparent;
}

.search input:focus {
  box-shadow: 0 0 5px var(--theme-color, #42b983);
  border: 1px solid var(--theme-color, #42b983);
}

.search input::-webkit-search-decoration,
.search input::-webkit-search-cancel-button,
.search input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.search input::-ms-clear {
  display: none;
  height: 0;
  width: 0;
}

.search .clear-button {
  cursor: pointer;
  width: 36px;
  text-align: right;
  display: none;
}

.search .clear-button.show {
  display: block;
}

.search .clear-button svg {
  transform: scale(.5);
}

.search h2 {
  font-size: 17px;
  margin: 10px 0;
}

.search a {
  text-decoration: none;
  color: inherit;
}

.search .matching-post {
  border-bottom: 1px solid #eee;
}

.search .matching-post:last-child {
  border-bottom: 0;
}

.search p {
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.search p.empty {
  text-align: center;
}

.app-name.hide, .sidebar-nav.hide {
  display: none;
}</style></head>

<body data-page="zh-cn/ScepterSDK/BaseSDK.md" class="ready sticky">
   <nav class="app-nav no-badge"><ul><li><a href="http://localhost:3000/#/en/" title="English">English</a></li><li><a href="http://localhost:3000/#/zh-cn/" title="中文" class="active">中文</a></li></ul></nav><main><button class="sidebar-toggle" aria-label="Menu"><div class="sidebar-toggle-button"><span></span><span></span><span></span></div></button><aside class="sidebar"><div class="search"><div class="input-wrap">
      <input type="search" value="" aria-label="Search text" placeholder="Type to search">
      <div class="clear-button">
        <svg width="26" height="24">
          <circle cx="12" cy="12" r="11" fill="#ccc"></circle>
          <path stroke="white" stroke-width="2" d="M8.25,8.25,15.75,15.75"></path>
          <path stroke="white" stroke-width="2" d="M8.25,15.75,15.75,8.25"></path>
        </svg>
      </div>
    </div>
    <div class="results-panel"></div>
    </div><h1 class="app-name"><a class="app-name-link" data-nosearch="" href="http://localhost:3000/">Scepter-Wiki</a></h1><div class="sidebar-nav"><p>技术原理简介</p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ToFBasicPrinciple/3DTecIntroduction" title="1. 3D 视觉技术简介">1. 3D 视觉技术简介</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ToFBasicPrinciple/3DTecClassification" title="2. 3D 技术的分类">2. 3D 技术的分类</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ToFBasicPrinciple/ToFComposition" title="3. ToF 相机的组成">3. ToF 相机的组成</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ToFBasicPrinciple/ToFPrinciple" title="4. ToF 相机的实现原理">4. ToF 相机的实现原理</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ToFBasicPrinciple/ToFFeatures" title="5. ToF 相机的技术特点">5. ToF 相机的技术特点</a></li></ul><p>产品介绍</p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ProductIntroduction/NYX650,660" title="1. NYX650/660">1. NYX650/660</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ProductIntroduction/DS86,87" title="2. DS86/87">2. DS86/87</a></li></ul><p>快速开始</p><ul><li class="file"><p><a href="http://localhost:3000/#/zh-cn/Quickstart/Quickstart?id=_1-%e8%ae%be%e5%a4%87%e8%bf%9e%e6%8e%a5" title="1.设备连接">1.设备连接</a></p></li><li class="file"><p><a href="http://localhost:3000/#/zh-cn/Quickstart/Quickstart?id=_2-%e6%89%93%e5%bc%80%e8%ae%be%e5%a4%87" title="2.打开设备">2.打开设备</a></p></li></ul><p>Scepter 图形化工具介绍</p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterGUITool/Overview" title="1. 概述">1. 概述</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterGUITool/DeviceConnection" title="2. 设备连接">2. 设备连接</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterGUITool/FunctionIntroduction" title="3. 功能介绍">3. 功能介绍</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterGUITool/FAQ" title="4. FAQ">4. FAQ</a></li></ul><p>Scepter 软件开发包介绍</p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/Overview" title="1. 简介">1. 简介</a></li></ul><ul><li class="open file"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK" title="2. BaseSDK (C/C++)">2. BaseSDK (C/C++)</a><ul class="app-sub-sidebar open"><li class="file"><a class="section-link" href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_21-%e5%9f%ba%e7%a1%80%e4%bb%8b%e7%bb%8d" title="2.1. 基础介绍">2.1. 基础介绍</a></li><li class="file"><a class="section-link" href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_22-%e9%a1%b9%e7%9b%ae%e9%85%8d%e7%bd%ae" title="2.2. 项目配置">2.2. 项目配置</a></li><li class="file active"><a class="section-link" href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_23-%e5%9f%ba%e7%a1%80%e4%be%8b%e7%a8%8b" title="2.3. 基础例程">2.3. 基础例程</a></li><li class="file"><a class="section-link" href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_24-opencv-%e4%be%8b%e7%a8%8b" title="2.4. OpenCV 例程">2.4. OpenCV 例程</a></li><li class="file"><a class="section-link" href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25-api-%e5%8f%82%e8%80%83" title="2.5. API 参考">2.5. API 参考</a></li></ul></li></ul><ul><li class="folder"><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/MultilanguageSDK/Overview" title="3. MultilanguageSDK">3. MultilanguageSDK</a></p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/MultilanguageSDK/Python" title="3.1. Python">3.1. Python</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/MultilanguageSDK/CSharp" title="3.2. CSharp">3.2. CSharp</a></li></ul></li></ul><ul><li class="folder"><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/3rd-Party%20Plugin/Overview" title="4. 3rd-Party Plugin">4. 3rd-Party Plugin</a></p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/3rd-Party%20Plugin/ROS" title="4.1. ROS">4.1. ROS</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/3rd-Party%20Plugin/ROS2" title="4.2. ROS2">4.2. ROS2</a></li></ul></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/FAQ" title="5. FAQ">5. FAQ</a></li></ul><p>应用笔记</p><ul><li class="folder"><p><a href="javascript:;" target="_self" rel="noopener" title="1. NYX650/660">1. NYX650/660</a></p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ApplicationNote/NYX650&amp;660/Depth%20Quality%20Test" title="1.1. 深度质量测试">1.1. 深度质量测试</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ApplicationNote/NYX650&amp;660/AGV%20scene%20Testing%20Data" title="1.2. AGV 场景测试数据">1.2. AGV 场景测试数据</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ApplicationNote/NYX650&amp;660/Multi-Cameras%20Coexist" title="1.3. 多机共存">1.3. 多机共存</a></li></ul></li></ul><ul><li class="folder"><p><a href="javascript:;" target="_self" rel="noopener" title="2. DS86/87">2. DS86/87</a></p><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ApplicationNote/DS86&amp;87/Depth%20Quality%20Test" title="2.1. 深度质量测试">2.1. 深度质量测试</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ApplicationNote/DS86&amp;87/AGV%20scene%20Testing%20Data" title="2.2. AGV 场景测试数据">2.2. AGV 场景测试数据</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ApplicationNote/DS86&amp;87/HDR%20Mode" title="2.3. HDR 模式">2.3. HDR 模式</a></li></ul><ul><li class="file"><a href="http://localhost:3000/#/zh-cn/ApplicationNote/DS86&amp;87/Multi-Cameras%20Coexist" title="2.4. 多机共存">2.4. 多机共存</a></li></ul></li></ul></div></aside><section class="content"><article class="markdown-section" id="main"><h1 id="_2-basesdk-cc"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2-basesdk-cc" data-id="_2-basesdk-cc" class="anchor"><span>2. BaseSDK (C/C++)</span></a></h1><h2 id="_21-基础介绍"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_21-%e5%9f%ba%e7%a1%80%e4%bb%8b%e7%bb%8d" data-id="_21-基础介绍" class="anchor"><span>2.1. 基础介绍</span></a></h2><p>BaseSDK 包含 Windows，Ubuntu16.04，Ubuntu18.04，AArch64 开发包部分，目录结构如下：</p><div class="docsify-tabs docsify-tabs--classic">
<button class="docsify-tabs__tab" data-tab="windows">Windows</button>
<div class="docsify-tabs__content" data-tab-content="windows">

<p>Windows 目录包含个人计算机平台(x86_64) Windows PC 开发包, 使用标准编译器 VS2017。</p><p><img src="./2. BaseSDK (C_C++)_files/Contents.png" data-origin="pic/Windows/Contents.png" alt="WindowsContents" class="medium-zoom-image"></p><ul><li><p>Bin：目录主要包含 SDK 的动态链接库，如 Scepter_api.dll，包括 x64 和 x86 的版本，运行基于该 SDK 开发的应用之前，需要先将相应平台的 dll 文件拷贝到可执行程序所在的目录。</p></li><li><p>Include：主要包含 SDK 的通用头文件：Scepter_api.h，Scepter_define.h，Scepter_enums.h，Scepter_types.h。</p></li><li><p>Lib：主要包含 SDK 的 lib 文件，如 Scepter_api.lib。</p></li><li><p>PrecompiledSamples：FrameViewer 可查看深度摄像头的深度图像和 IR 图像，针对不同设备，可自行编译 Samples 目录中的 FrameViewer 进行相应展示。</p></li><li><p>Samples：主要包含使用 ScepterSDK 开发的例程。</p></li><li><p>README：SDK 的内容简介。</p></li><li><p>ReleaseNotes：SDK 的版本发布说明。</p></li></ul></div>
<button class="docsify-tabs__tab" data-tab="ubuntu">Ubuntu</button>
<div class="docsify-tabs__content" data-tab-content="ubuntu">

<p>Ubuntu16.04 目录包含个人计算机平台(x86_64) Ubuntu16.04 开发包, 使用标准编译器 x86_64-linux-gnu(v5.4.0)。</p><p>Ubuntu18.04 目录包含个人计算机平台(x86_64) Ubuntu18.04 开发包, 使用标准编译器 x86_64-linux-gnu(v7.5.0)。</p><p>Ubuntu18.04 SDK 包与 Ubuntu20.04、Ubuntu22.04 兼容。</p><p><img src="./2. BaseSDK (C_C++)_files/Contents(1).png" data-origin="pic/Ubuntu/Contents.png" alt="UbuntuContents" class="medium-zoom-image"></p><ul><li><p>Include：主要包含 SDK 的通用头文件：Scepter_api.h，Scepter_define.h，Scepter_enums.h，Scepter_types.h。</p></li><li><p>Lib：主要包含 SDK 的 lib 文件，如 Scepter_api.so。</p></li><li><p>PrecompiledSamples：FrameViewer 可查看深度摄像头的深度图像和 IR 图像，针对不同设备，可自行编译 Samples 目录中的 FrameViewer 进行相应展示。</p></li><li><p>Samples：主要包含使用 ScepterSDK 开发的例程。</p></li><li><p>README：SDK 的内容简介。</p></li><li><p>ReleaseNotes：SDK 的版本发布说明。</p></li></ul></div>
<button class="docsify-tabs__tab" data-tab="aarch64">AArch64</button>
<div class="docsify-tabs__content" data-tab-content="aarch64">

<p>AArch64 目录包含 64 位 Arm-Linux 开发包，使用标准编译器 aarch64-linux-gnu(v7.5.0)。</p><p><img src="./2. BaseSDK (C_C++)_files/Contents(2).png" data-origin="pic/AArch64/Contents.png" alt="AArch64Contents" class="medium-zoom-image"></p><ul><li><p>Include：主要包含 SDK 的通用头文件：Scepter_api.h，Scepter_define.h，Scepter_enums.h，Scepter_types.h。</p></li><li><p>Lib：主要包含 SDK 的 lib 文件，如 Scepter_api.so。</p></li><li><p>PrecompiledSamples：FrameViewer 可查看深度摄像头的深度图像和 IR 图像，针对不同设备，可自行编译 Samples 目录中的 FrameViewer 进行相应展示。</p></li><li><p>Samples：主要包含使用 ScepterSDK 开发的例程。</p></li><li><p>README：SDK 的内容简介。</p></li><li><p>ReleaseNotes：SDK 的版本发布说明。</p></li></ul></div>
</div>

<h2 id="_22-项目配置"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_22-%e9%a1%b9%e7%9b%ae%e9%85%8d%e7%bd%ae" data-id="_22-项目配置" class="anchor"><span>2.2. 项目配置</span></a></h2><div class="docsify-tabs docsify-tabs--classic">
<button class="docsify-tabs__tab" data-tab="windows">Windows</button>
<div class="docsify-tabs__content" data-tab-content="windows">

<p>Windows 下使用 Visual Studio 2017 开发，可以选择以下两种方式新建工程：</p><p>方式一设置 VC++ 目录和链接器的属性值；</p><p>方式二设置 C/C++ 和链接器的属性值。</p><div class="docsify-tabs docsify-tabs--classic">
<button class="docsify-tabs__tab" data-tab="方式一">方式一</button>
<div class="docsify-tabs__content" data-tab-content="方式一">

<p>新建应用项目工程，设置工程属性，将 Include 目录添加到包含目录中，将 Lib 目录添加到库目录中。</p><p><img src="./2. BaseSDK (C_C++)_files/ProjectConfiguration1.png" data-origin="pic/Windows/ProjectConfiguration1.png" alt="项目配置" class="medium-zoom-image"></p></div>
<button class="docsify-tabs__tab" data-tab="方式二">方式二</button>
<div class="docsify-tabs__content" data-tab-content="方式二">

<p>新建应用项目工程，设置工程属性，将 Include 目录添加到附加包含目录中。</p><p><img src="./2. BaseSDK (C_C++)_files/ProjectConfiguration4.png" data-origin="pic/Windows/ProjectConfiguration4.png" alt="项目配置" class="medium-zoom-image"></p><p>将 Lib 目录添加到附加库目录中。</p><p><img src="./2. BaseSDK (C_C++)_files/ProjectConfiguration5.png" data-origin="pic/Windows/ProjectConfiguration5.png" alt="项目配置" class="medium-zoom-image"></p></div>
</div>

<p>将 Scepter_api.lib 添加到附加依赖项中。</p><p><img src="./2. BaseSDK (C_C++)_files/ProjectConfiguration2.png" data-origin="pic/Windows/ProjectConfiguration2.png" alt="项目配置" class="medium-zoom-image"></p><p>依据开发环境(x64/x86)将 SDK 的 Bin 文件夹中 x64/x86 下的所有文件拷贝到项目工程指定的输出目录中。</p><p><img src="./2. BaseSDK (C_C++)_files/ProjectConfiguration3.png" data-origin="pic/Windows/ProjectConfiguration3.png" alt="项目配置" class="medium-zoom-image"></p><p>可参考 Samples 中的项目配置。</p></div>
<button class="docsify-tabs__tab" data-tab="ubuntu">Ubuntu</button>
<div class="docsify-tabs__content" data-tab-content="ubuntu">

<p>使用 ScepterSDK 开发新的项目，需要在 CMakeList 中将 SDK 中的 Include 目录加入到包含路径:</p><pre v-pre="" data-lang="consle"><code class="lang-consle">include_directories("../../../Include")</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p>将 Lib 目录加入到链接搜索路径，并链接 libScepter_api.so。</p><pre v-pre="" data-lang="consle"><code class="lang-consle">LINK_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/../../../Lib/")</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p>具体内容可参考 Samples 中的例程配置。</p><p><img src="./2. BaseSDK (C_C++)_files/ProjectConfiguration.png" data-origin="pic/Ubuntu/ProjectConfiguration.png" alt="项目配置" class="medium-zoom-image"></p></div>
<button class="docsify-tabs__tab" data-tab="aarch64">AArch64</button>
<div class="docsify-tabs__content" data-tab-content="aarch64">

<p>使用 ScepterSDK 开发新的项目，需要在 CMakeList 中将 SDK 中的 Include 目录加入到包含路径:</p><pre v-pre="" data-lang="consle"><code class="lang-consle">include_directories("../../../Include")</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p>将 Lib 目录加入到链接搜索路径，并链接 libScepter_api.so。</p><pre v-pre="" data-lang="consle"><code class="lang-consle">LINK_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/../../../Lib/")</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p>具体内容可参考 Samples 中的例程配置。</p><p><img src="./2. BaseSDK (C_C++)_files/ProjectConfiguration(1).png" data-origin="pic/AArch64/ProjectConfiguration.png" alt="项目配置" class="medium-zoom-image"></p></div>
</div>

<h2 id="_23-基础例程"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_23-%e5%9f%ba%e7%a1%80%e4%be%8b%e7%a8%8b" data-id="_23-基础例程" class="anchor"><span>2.3. 基础例程</span></a></h2><p>基础例程介绍 SDK 的单个特性 API 接口的使用。为了使用户可以快速的熟悉使用，例程根据产品进行分类。</p><p>例程包含打开图像数据流、图像获取、软/硬触发、点云转换与保存等 API 接口的使用。</p><p><img src="./2. BaseSDK (C_C++)_files/BaseSDKSamples.png" data-origin="pic/BaseSDKSamples.png" alt="BaseSDKSamples" class="medium-zoom-image"></p><p>接下来，我们将详细介绍每个例程的功能。</p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">ColorExposureTimeSetGet                         <span class="token comment">//设置获取设备彩色传感器曝光时间</span>
ColorResolutionChange                           <span class="token comment">//更改设备彩色传感器分辨率</span>
DevHotPlugCallbackC                             <span class="token comment">//C 设置设备热插拔回调</span>
DevHotPlugCallbackCpp                           <span class="token comment">//C++设置设备热插拔回调</span>
DeviceConnectByIP                               <span class="token comment">//设置设备通过 IP 地址链接</span>
DeviceConnectBySN                               <span class="token comment">//设置设备通过设备 SN 连接</span>
DeviceHWTriggerMode                             <span class="token comment">//设置设备为硬触发模式</span>
DeviceInfoGet                                   <span class="token comment">//获取设备 SN、IP 地址、固件版本信息</span>
DeviceParamSetGet                               <span class="token comment">//获取设备内外参、畸变参数，设置、获取设备 GmmaGian 值</span>
DeviceSearchAndConnect                          <span class="token comment">//搜索并连接设备</span>
DeviceSetFrameRate                              <span class="token comment">//设置设备帧率</span>
DeviceSetParamsByJson                           <span class="token comment">//通过 Json 设置设备参数</span>
DeviceStartStopStreaming                        <span class="token comment">//开始与停止设备数据流</span>
DeviceSWTriggerMode                             <span class="token comment">//设置设备为软触发模式</span>
FrameCaptureAndSave                             <span class="token comment">//捕获与保存设备图像</span>
IRGMMCorrectionSetGet                           <span class="token comment">//设置获取设备 ToF IR校正参数</span>
MultiConnection                                 <span class="token comment">//多设备连接</span>
MultiConnectionInMultiThread                    <span class="token comment">//在多线程中多设备连接</span>
PointCloudCaptureAndSave                        <span class="token comment">//捕获与保存点云</span>
PointCloudCaptureAndSaveDepthImgToColorSensor   <span class="token comment">//捕获点云并且将其保存到彩色图像传感器</span>
PointCloudVectorAndSave                         <span class="token comment">//捕获与保存 ROI 区域中的点云</span>
PointCloudVectorAndSaveDepthImgToColorSensor    <span class="token comment">//捕获 ROI 区域中的点云并且将其保存到彩色图像传感器</span>
ToFExposureTimeSetGet                           <span class="token comment">//设置获取设备 ToF 曝光时间</span>
ToFFiltersSetGet                                <span class="token comment">//设置获取设备 ToF 滤波开关</span>
TransformColorImgToDepthSensorFrame             <span class="token comment">//将彩色图像对齐到设备的深度图像空间</span>
TransformDepthImgToColorSensorFrame             <span class="token comment">//将深度图像对齐到设备的彩色图像空间</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p>下面，我们以单个产品的单独例程为例，演示其编译运行的过程：</p><div class="docsify-tabs docsify-tabs--classic">
<button class="docsify-tabs__tab" data-tab="windows">Windows</button>
<div class="docsify-tabs__content" data-tab-content="windows">

<ol><li><p>根据实际产品选择对应的 sample，以 NYX650 产品编译 DeviceConnectBySN 为例:</p><p>① 鼠标右键选择需要启动的项目，选择右键选项栏中的“设为启动项目”选项。</p><p>② 点击菜单栏的“调试”按钮，选择下拉栏中的“开始调试”或使用快捷键“F5”编译运行项目。</p><p><img src="./2. BaseSDK (C_C++)_files/Compilation.png" data-origin="pic/Windows/Compilation.png" alt="Compilation" class="medium-zoom-image"></p></li><li><p>编译完成，调试运行。结果如下图：</p><p><img src="./2. BaseSDK (C_C++)_files/Execution.png" data-origin="pic/Windows/Execution.png" alt="Execution" class="medium-zoom-image"></p></li></ol></div>
<button class="docsify-tabs__tab" data-tab="ubuntu">Ubuntu</button>
<div class="docsify-tabs__content" data-tab-content="ubuntu">

<ol><li><p>根据实际产品选择对应的 sample，以 NYX650 产品编译 DeviceConnectBySN 为例</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/Ubuntu18.04/Samples/Base/NYX650
mkdir build
cd build/
cmake ../
make</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/Compilation1.png" data-origin="pic/Ubuntu/Compilation1.png" alt="Compilation" class="medium-zoom-image">
<img src="./2. BaseSDK (C_C++)_files/Compilation2.png" data-origin="pic/Ubuntu/Compilation2.png" alt="Compilation" class="medium-zoom-image"></p></li><li><p>编译完成，输出路径为 PrecompiledSamples，进入目录后运行。</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/Ubuntu/PrecompiledSamples/NYX650_Samples/
./DeviceConnectBySN</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/Execution(1).png" data-origin="pic/Ubuntu/Execution.png" alt="Execution" class="medium-zoom-image"></p></li></ol></div>
<button class="docsify-tabs__tab" data-tab="aarch64">AArch64</button>
<div class="docsify-tabs__content" data-tab-content="aarch64">

<ol><li><p>根据实际产品选择对应的 sample，以 NYX650 产品编译 DeviceConnectBySN 为例</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/AArch64/Samples/Base/NYX650/
mkdir build
cd build/
cmake ../
make</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/Compilation1(1).png" data-origin="pic/AArch64/Compilation1.png" alt="Compilation" class="medium-zoom-image">
<img src="./2. BaseSDK (C_C++)_files/Compilation2(1).png" data-origin="pic/AArch64/Compilation2.png" alt="Compilation" class="medium-zoom-image"></p></li><li><p>编译完成，输出路径为 PrecompiledSamples，进入目录后运行。</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/AArch64/PrecompiledSamples/NYX650_Samples/
./DeviceConnectBySN</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/Execution(2).png" data-origin="pic/AArch64/Execution.png" alt="Execution" class="medium-zoom-image"></p></li></ol></div>
</div>

<h2 id="_24-opencv-例程"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_24-opencv-%e4%be%8b%e7%a8%8b" data-id="_24-opencv-例程" class="anchor"><span>2.4. OpenCV 例程</span></a></h2><p>OpenCV 例程用于展示如何搭配第三方库使用 ScepterSDK。例程使用 OpenCV 的图像映射功能展示彩色深度图像、IR 与 Color 图像。</p><div class="docsify-tabs docsify-tabs--classic">
<button class="docsify-tabs__tab" data-tab="windows">Windows</button>
<div class="docsify-tabs__content" data-tab-content="windows">

<ol><li><p>到 OpenCV 官网，下载并安装 <a href="https://sourceforge.net/projects/opencvlibrary/files/opencv-win/3.0.0-rc1/opencv-3.0.0-rc1.exe/download" target="_self" rel="noopener">OpenCV 3.0.0</a>。</p><p>选用此版本的原因是在 ScepterSDK 中，OpenCVSample 采用了 OpenCV 3.0.0 版本进行开发。您可以根据实际的编程需求，选择使用不同版本的 OpenCV。</p><p><img src="./2. BaseSDK (C_C++)_files/DownloadOpenCV.png" data-origin="pic/Windows/DownloadOpenCV.png" alt="DownloadOpenCV" class="medium-zoom-image"></p><p>选择指定的位置开始解压。</p><p><img src="./2. BaseSDK (C_C++)_files/Extract.png" data-origin="pic/Windows/Extract.png" alt="Extract" class="medium-zoom-image"></p></li><li><p>设置环境变量 OPENCV_DIR。</p><p>设置此环境变量的原因是在 ScepterSDK 中，OpenCVSample 采用了 OPENCV_DIR 这一环境变量。</p><p>其值为安装的 OpenCV 的 build 目录的绝对路径，例如 D:\Programs\OpenCV300\opencv\build。</p><p><img src="./2. BaseSDK (C_C++)_files/SetEnvironment.png" data-origin="pic/Windows/SetEnvironment.png" alt="SetEnvironment" class="medium-zoom-image"></p></li><li><p>根据实际产品选择对应的 sample。</p><p>下面以 NYX650 为例，使用 Visual Studio 2017 打开 ScepterSDK\Windows\Samples\OpenCV\NYX650 目录下的 FrameViewer.vcxproj，直接编译。</p><p><img src="./2. BaseSDK (C_C++)_files/FrameViewer Project.png" data-origin="pic/Windows/FrameViewer Project.png" alt="FrameViewer Project" class="medium-zoom-image"></p></li><li><p>编译生成的可执行文件 FrameViewer.exe 在 ScepterSDK\Windows\Bin\x86\或 ScepterSDK\Windows\Bin\x64\目录下。</p></li><li><p>运行 FrameViewer.exe，执行效果如下图。</p><p><img src="./2. BaseSDK (C_C++)_files/Execution Successful.png" data-origin="pic/Windows/Execution Successful.png" alt="Execution Successful" class="medium-zoom-image"></p></li></ol></div>
<button class="docsify-tabs__tab" data-tab="ubuntu">Ubuntu</button>
<div class="docsify-tabs__content" data-tab-content="ubuntu">

<ol><li><p>为方便您直接使用，Samples/OpenCV/Thirdparty 目录下已经包含预编译好的 OpenCV 3.4.1 版本，无需您额外下载和编译。</p><p><img src="./2. BaseSDK (C_C++)_files/OpenCV.png" data-origin="pic/Ubuntu/OpenCV.png" alt="UbuntuOpenCV" class="medium-zoom-image"></p><p>选用此版本的原因是在 ScepterSDK 中，OpenCVSample 采用了 OpenCV 3.4.1 版本进行开发。您可以根据实际的编程需求，选择使用不同版本的 OpenCV。</p></li><li><p>根据实际产品选择对应的 sample，以 NYX650 为例编译 OpenCV 显示例程</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/Ubuntu/Samples/OpenCV/NYX650
mkdir build
cd build/
cmake ../
make</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/CompilationOpencv.png" data-origin="pic/Ubuntu/CompilationOpencv.png" alt="CompilationOpencv" class="medium-zoom-image"></p></li><li><p>运行编译成功后的 Demo</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/Ubuntu/PrecompiledSamples/
./NYX650_OpenCVSample</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/ExecutionOpencv.png" data-origin="pic/Ubuntu/ExecutionOpencv.png" alt="ExecutionOpencv" class="medium-zoom-image"></p></li></ol></div>
<button class="docsify-tabs__tab" data-tab="aarch64">AArch64</button>
<div class="docsify-tabs__content" data-tab-content="aarch64">

<ol><li><p>为方便您直接使用，Samples/OpenCV/Thirdparty 目录下已经包含预编译好的 OpenCV 3.4.1 版本，无需您额外下载和编译。</p><p><img src="./2. BaseSDK (C_C++)_files/OpenCV(1).png" data-origin="pic/AArch64/OpenCV.png" alt="AArch64OpenCV" class="medium-zoom-image"></p><p>选用此版本的原因是在 ScepterSDK 中，OpenCVSample 采用了 OpenCV 3.4.1 版本进行开发。您可以根据实际的编程需求，选择使用不同版本的 OpenCV。</p><blockquote>
<p>AArch64 端常用 headless 模式，该模式下运行 OpenCV 会出错。OpenCV 在 headless 模式下运行可能遇到的问题包括：依赖的图形库不可用、图形环境配置错误、或者 OpenCV 的某些功能依赖于图形处理能力。</p></blockquote>
</li><li><p>根据实际产品选择对应的 sample，以 NYX650 为例编译 OpenCV 显示例程</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/AArch64/Samples/OpenCV/NYX650
mkdir build
cd build/
cmake ../
make</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/CompilationOpencv(1).png" data-origin="pic/AArch64/CompilationOpenCV.png" alt="AArch64CompilationOpenCV" class="medium-zoom-image"></p></li><li><p>运行编译成功后的 Demo</p><pre v-pre="" data-lang="consle"><code class="lang-consle">cd ScepterSDK/AArch64/PrecompiledSamples/
./NYX650_OpenCVSample</code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><img src="./2. BaseSDK (C_C++)_files/ExecutionOpencv(1).png" data-origin="pic/AArch64/ExecutionOpenCV.png" alt="AArch64ExecutionOpenCV" class="medium-zoom-image"></p></li></ol></div>
</div>

<h2 id="_25-api-参考"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25-api-%e5%8f%82%e8%80%83" data-id="_25-api-参考" class="anchor"><span>2.5. API 参考</span></a></h2><blockquote>
<p>不同型号产品对应的枚举值个数可能不同，请以实际枚举值为准。</p></blockquote>
<div class="docsify-tabs docsify-tabs--classic">
<button class="docsify-tabs__tab" data-tab="enum 数据类型">Enum 数据类型</button>
<div class="docsify-tabs__content" data-tab-content="enum 数据类型">

<h3 id="_2511-scframetype"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2511-scframetype" data-id="_2511-scframetype" class="anchor"><span>2.5.1.1. ScFrameType</span></a></h3><p><strong>功能：</strong></p><p>图像类型。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    SC_DEPTH_FRAME                               <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token comment">//表示深度图像类型，每像素16位，以毫米为单位</span>
    SC_IR_FRAME                                  <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token comment">//表示灰度图像类型，每像素8位</span>
    SC_COLOR_FRAME                               <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>   <span class="token comment">//表示彩色图像类型，每像素24位，RGB/BGR格式</span>
    SC_TRANSFORM_COLOR_IMG_TO_DEPTH_SENSOR_FRAME <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>   <span class="token comment">//表示映射到深度传感器空间的彩色图像类型，其中分辨率与深度图像的分辨率相同</span>

                                                        <span class="token comment">//可以使用scSetTransformColorImgToDepthSensorEnabled()启用此帧类型</span>
    SC_TRANSFORM_DEPTH_IMG_TO_COLOR_SENSOR_FRAME <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>   <span class="token comment">//表示映射到彩色传感器空间的深度图像类型，其中分辨率与彩色图像的分辨率相同。</span>
                                                        <span class="token comment">//可以使用scSetTransformDepthImgToColorSensorEnabled()启用此帧类型</span>
<span class="token punctuation">}</span> <span class="token keyword">ScFrameType</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2512-scpixelformat"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2512-scpixelformat" data-id="_2512-scpixelformat" class="anchor"><span>2.5.1.2. ScPixelFormat</span></a></h3><p><strong>功能：</strong></p><p>图像数据的像素类型。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    SC_PIXEL_FORMAT_DEPTH_MM16   <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token comment">//表示每个像素数据为 16 位的深度值，单位为毫米</span>
    SC_PIXEL_FORMAT_GRAY_8       <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>   <span class="token comment">//表示每个像素数据为 8 位的灰度值</span>

    <span class="token comment">// Color</span>
    SC_PIXEL_FORMAT_RGB_888_JPEG <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>   <span class="token comment">//表示通过JPEG解压缩，彩色图像像素格式，每个像素数据为 24 位的 RGB 值</span>
    SC_PIXEL_FORMAT_BGR_888_JPEG <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>   <span class="token comment">//表示通过JPEG解压缩，彩色图像像素格式，每个像素数据为 24 位的 BGR 值</span>
    SC_PIXEL_FORMAT_RGB_888      <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>   <span class="token comment">//表示无压缩，彩色图像像素格式，每个像素数据为 24 位的 RGB 值</span>
    SC_PIXEL_FORMAT_BGR_888      <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span>   <span class="token comment">//表示无压缩，彩色图像像素格式，每个像素数据为 24 位的 BGR 值</span>
    SC_PIXEL_FORMAT_RGB_565      <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span>   <span class="token comment">//表示无压缩，彩色图像像素格式，每个像素数据为 16 位的 RGB 值</span>
    SC_PIXEL_FORMAT_BGR_565      <span class="token operator">=</span> <span class="token number">8</span>    <span class="token comment">//表示无压缩，彩色图像像素格式，每个像素数据为 16 位的 BGR 值</span>
<span class="token punctuation">}</span> <span class="token keyword">ScPixelFormat</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2513-scsensortype"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype" data-id="_2513-scsensortype" class="anchor"><span>2.5.1.3. ScSensorType</span></a></h3><p><strong>功能：</strong></p><p>传感器类型。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    SC_TOF_SENSOR   <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">,</span>   <span class="token comment">//表示深度数据传感器</span>
    SC_COLOR_SENSOR <span class="token operator">=</span> <span class="token number">0x02</span>    <span class="token comment">//表示彩色图像传感器</span>
<span class="token punctuation">}</span> <span class="token keyword">ScSensorType</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2514-scstatus"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus" data-id="_2514-scstatus" class="anchor"><span>2.5.1.4. ScStatus</span></a></h3><p><strong>功能：</strong></p><p>接口函数的返回值。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    SC_OK                           <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token comment">//表示调用成功</span>
    SC_NO_DEVICE_CONNECTED          <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>     <span class="token comment">//表示当前无设备连接，或设备未正确连接。检查硬件连接或尝试拔下并重新插入电缆。</span>
    SC_INVALID_DEVICE_INDEX         <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>     <span class="token comment">//表示传入的设备序号无效</span>
    SC_DEVICE_POINTER_IS_NULL       <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span>     <span class="token comment">//表示传入的设备指针为空</span>
    SC_INVALID_FRAME_TYPE           <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span>     <span class="token comment">//表示传入的图像类型无效</span>
    SC_FRAME_POINTER_IS_NULL        <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span>     <span class="token comment">//表示传入的图像指针为空</span>
    SC_NO_PROPERTY_VALUE_GET        <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span>     <span class="token comment">//表示无法获取当前属性值</span>
    SC_NO_PROPERTY_VALUE_SET        <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span>     <span class="token comment">//表示无法设置当前属性值</span>
    SC_PROPERTY_POINTER_IS_NULL     <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span>     <span class="token comment">//表示传入的指向存储属性值的缓存指针为空</span>
    SC_PROPERTY_SIZE_NOT_ENOUGH     <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span>     <span class="token comment">//表示传入的指向存储属性值的缓存空间不足</span>
    SC_INVALID_DEPTH_RANGE          <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span>    <span class="token comment">//表示传入的 depth range 无效</span>
    SC_GET_FRAME_READY_TIME_OUT     <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">,</span>    <span class="token comment">//表示获取图像时超时</span>
    SC_INPUT_POINTER_IS_NULL        <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span>    <span class="token comment">//表示传入的指针为空</span>
    SC_CAMERA_NOT_OPENED            <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">13</span><span class="token punctuation">,</span>    <span class="token comment">//表示相机未打开</span>
    SC_INVALID_CAMERA_TYPE          <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">14</span><span class="token punctuation">,</span>    <span class="token comment">//表示传入的相机类型无效</span>
    SC_INVALID_PARAMS               <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span>    <span class="token comment">//表示传入的参数无效</span>
    SC_CURRENT_VERSION_NOT_SUPPORT  <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">,</span>    <span class="token comment">//表示当前版本不支持</span>
    SC_UPGRADE_IMG_ERROR            <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">17</span><span class="token punctuation">,</span>    <span class="token comment">//表示升级相机固件失败</span>
    SC_UPGRADE_IMG_PATH_TOO_LONG    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">,</span>    <span class="token comment">//表示传入的相机固件路径长度太长（大于260）</span>
    SC_UPGRADE_CALLBACK_NOT_SET     <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">,</span>    <span class="token comment">//表示未设置相机升级时的回调函数</span>
    SC_PRODUCT_NOT_SUPPORT          <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span>    <span class="token comment">//表示当前设备不支持此操作</span>
    SC_NO_CONFIG_FOLDER             <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">21</span><span class="token punctuation">,</span>    <span class="token comment">//表示未找到产品配置文件</span>
    SC_WEB_SERVER_START_ERROR       <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">22</span><span class="token punctuation">,</span>    <span class="token comment">//表示Web服务器启动/重新启动错误（IP或端口）</span>
    SC_GET_OVER_STAY_FRAME          <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">23</span><span class="token punctuation">,</span>    <span class="token comment">//表示从帧准备就绪到获取帧的时间超出1秒</span>
    SC_CREATE_LOG_DIR_ERROR         <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">,</span>    <span class="token comment">//表示创建日志目录错误</span>
    SC_CREATE_LOG_FILE_ERROR        <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span>    <span class="token comment">//表示创建日志文件错误</span>
    SC_NO_ADAPTER_CONNECTED         <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span>   <span class="token comment">//表示电源适配器未连接</span>
    SC_REINITIALIZED                <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">101</span><span class="token punctuation">,</span>   <span class="token comment">//表示重复初始化</span>
    SC_NO_INITIALIZED               <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">102</span><span class="token punctuation">,</span>   <span class="token comment">//表示未做初始化</span>
    SC_CAMERA_OPENED                <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">103</span><span class="token punctuation">,</span>   <span class="token comment">//表示相机已经打开</span>
    SC_CMD_ERROR                    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">104</span><span class="token punctuation">,</span>   <span class="token comment">//表示命令下发失败</span>
    SC_CMD_SYNC_TIME_OUT            <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">105</span><span class="token punctuation">,</span>   <span class="token comment">//表示命令发送成功，但是同步匹配失败</span>
    SC_IP_NOT_MATCH                 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">106</span><span class="token punctuation">,</span>   <span class="token comment">//表示相机 IP 与主机 IP 不在同一网段</span>
    SC_NOT_STOP_STREAM              <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">107</span><span class="token punctuation">,</span>   <span class="token comment">//表示未调用SCStopStream关闭数据流</span>
    SC_NOT_START_STREAM             <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">108</span><span class="token punctuation">,</span>   <span class="token comment">//表示未调用scStartStream获取数据流</span>
    SC_NOT_FIND_DRIVERS_FOLDER      <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">109</span><span class="token punctuation">,</span>   <span class="token comment">//表示驱动程序目录不存在</span>
    SC_CAMERA_OPENING               <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">110</span><span class="token punctuation">,</span>   <span class="token comment">//表示相机已通过另一个SC_OpenDeviceByXXX API打开</span>
    SC_CAMERA_OPENED_BY_ANOTHER_APP <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">111</span><span class="token punctuation">,</span>   <span class="token comment">//表示相机已被其他应用程序打开</span>
    SC_OTHERS                       <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">255</span><span class="token punctuation">,</span>   <span class="token comment">//表示其他错误</span>
<span class="token punctuation">}</span> <span class="token keyword">ScStatus</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2515-scconnectstatus"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2515-scconnectstatus" data-id="_2515-scconnectstatus" class="anchor"><span>2.5.1.5. ScConnectStatus</span></a></h3><p><strong>功能：</strong></p><p>设备连接状态。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    SC_LIMBO       <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token comment">//表示未知设备状态，无法尝试打开</span>
    SC_CONNECTABLE <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token comment">//表示设备可连接状态，支持打开</span>
    SC_OPENED      <span class="token operator">=</span> <span class="token number">2</span>    <span class="token comment">//表示设备已连接，无法再次打开</span>
<span class="token punctuation">}</span> <span class="token keyword">ScConnectStatus</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2516-scworkmode"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2516-scworkmode" data-id="_2516-scworkmode" class="anchor"><span>2.5.1.6. ScWorkMode</span></a></h3><p><strong>功能：</strong></p><p>设备工作状态。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    SC_ACTIVE_MODE           <span class="token operator">=</span> <span class="token number">0x00</span><span class="token punctuation">,</span>   <span class="token comment">//表示设备处于主动工作状态。此时使用 API 打开相机后，设备会主动上传图像数据</span>
    SC_HARDWARE_TRIGGER_MODE <span class="token operator">=</span> <span class="token number">0x01</span><span class="token punctuation">,</span>   <span class="token comment">//表示设备处于被动工作状态。此时使用 API 打开相机后，设备在硬件触发的时候，才会上传图像数据</span>
    SC_SOFTWARE_TRIGGER_MODE <span class="token operator">=</span> <span class="token number">0x02</span><span class="token punctuation">,</span>   <span class="token comment">//表示设备处于被动工作状态。此时使用 API 打开相机后，设备在软件触发的时候，才会上传图像数据</span>
<span class="token punctuation">}</span> <span class="token keyword">ScWorkMode</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2517-scexposurecontrolmode"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2517-scexposurecontrolmode" data-id="_2517-scexposurecontrolmode" class="anchor"><span>2.5.1.7. ScExposureControlMode</span></a></h3><p><strong>功能：</strong></p><p>传感器的曝光模式。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">enum</span>
<span class="token punctuation">{</span>
    SC_EXPOSURE_CONTROL_MODE_AUTO   <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment">//表示传感器使用自动曝光模式</span>
    SC_EXPOSURE_CONTROL_MODE_MANUAL <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token comment">//表示传感器使用手动曝光模式</span>
<span class="token punctuation">}</span> <span class="token keyword">ScExposureControlMode</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre></div>
<button class="docsify-tabs__tab" data-tab="struct 数据类型">Struct 数据类型</button>
<div class="docsify-tabs__content" data-tab-content="struct 数据类型">

<h3 id="_2521-scvector3f"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2521-scvector3f" data-id="_2521-scvector3f" class="anchor"><span>2.5.2.1. ScVector3f</span></a></h3><p><strong>功能：</strong></p><p>3 维点坐标，单位为毫米。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">float</span> x<span class="token punctuation">;</span>   <span class="token comment">//表示 X 轴方向的坐标值</span>
    <span class="token keyword">float</span> y<span class="token punctuation">;</span>   <span class="token comment">//表示 Y 轴方向的坐标值</span>
    <span class="token keyword">float</span> z<span class="token punctuation">;</span>   <span class="token comment">//表示 Z 轴方向的坐标值</span>
<span class="token punctuation">}</span> <span class="token keyword">ScVector3f</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2522-scvector2u16"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2522-scvector2u16" data-id="_2522-scvector2u16" class="anchor"><span>2.5.2.2. ScVector2u16</span></a></h3><p><strong>功能：</strong></p><p>2 维点坐标。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">uint16_t</span> x<span class="token punctuation">;</span>   <span class="token comment">//表示 X 轴方向的坐标值</span>
    <span class="token keyword">uint16_t</span> y<span class="token punctuation">;</span>   <span class="token comment">//表示 Y 轴方向的坐标值</span>
<span class="token punctuation">}</span> <span class="token keyword">ScVector2u16</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2523-scdepthvector3"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2523-scdepthvector3" data-id="_2523-scdepthvector3" class="anchor"><span>2.5.2.3. ScDepthVector3</span></a></h3><p><strong>功能：</strong></p><p>深度图像的像素点表示。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int32_t</span>      depthX<span class="token punctuation">;</span>   <span class="token comment">//表示图像坐标系下，X 轴方向的坐标值</span>
    <span class="token keyword">int32_t</span>      depthY<span class="token punctuation">;</span>   <span class="token comment">//表示图像坐标系下，Y 轴方向的坐标值</span>
    ScDepthPixel depthZ<span class="token punctuation">;</span>   <span class="token comment">//表示像素坐标（depthX，depthY）处的深度值，单位为毫米</span>
<span class="token punctuation">}</span> <span class="token keyword">ScDepthVector3</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2524-scresolution"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2524-scresolution" data-id="_2524-scresolution" class="anchor"><span>2.5.2.4. ScResolution</span></a></h3><p><strong>功能：</strong></p><p>图像分辨率。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int32_t</span> width<span class="token punctuation">;</span>   <span class="token comment">//表示图像的宽度</span>
    <span class="token keyword">int32_t</span> height<span class="token punctuation">;</span>  <span class="token comment">//表示图像的高度</span>
<span class="token punctuation">}</span> <span class="token keyword">ScResolution</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2525-scresolutionlist"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2525-scresolutionlist" data-id="_2525-scresolutionlist" class="anchor"><span>2.5.2.5. ScResolutionList</span></a></h3><p><strong>功能：</strong></p><p>支持的图像分辨率。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int32_t</span>      count<span class="token punctuation">;</span>          <span class="token comment">//表示支持的图像分辨率的数量</span>
    <span class="token keyword">ScResolution</span> resolution<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//表示支持的图像分辨率的信息</span>
<span class="token punctuation">}</span> <span class="token keyword">ScResolutionList</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2526-scsensorintrinsicparameters"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2526-scsensorintrinsicparameters" data-id="_2526-scsensorintrinsicparameters" class="anchor"><span>2.5.2.6. ScSensorIntrinsicParameters</span></a></h3><p><strong>功能：</strong></p><p>传感器的镜头内参和畸变参数。内参通常用于点云的计算，畸变参数用于图像反畸变算法使用。</p><p>SDK 中已经实现深度图像到点云的转换及图像反畸变的功能，请参考例程使用相关接口。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">double</span> fx<span class="token punctuation">;</span>   <span class="token comment">//x方向的焦距，单位为像素</span>
    <span class="token keyword">double</span> fy<span class="token punctuation">;</span>   <span class="token comment">//y方向的焦距，单位为像素</span>
    <span class="token keyword">double</span> cx<span class="token punctuation">;</span>   <span class="token comment">//主点的x坐标，图像的中心，单位为像素</span>
    <span class="token keyword">double</span> cy<span class="token punctuation">;</span>   <span class="token comment">//主点的y坐标，图像的中心，单位为像素</span>
    <span class="token keyword">double</span> k1<span class="token punctuation">;</span>   <span class="token comment">//径向畸变, 1st</span>
    <span class="token keyword">double</span> k2<span class="token punctuation">;</span>   <span class="token comment">//径向畸变, 2nd</span>
    <span class="token keyword">double</span> p1<span class="token punctuation">;</span>   <span class="token comment">//轴向畸变</span>
    <span class="token keyword">double</span> p2<span class="token punctuation">;</span>   <span class="token comment">//轴向畸变</span>
    <span class="token keyword">double</span> k3<span class="token punctuation">;</span>   <span class="token comment">//径向畸变, 3rd</span>
    <span class="token keyword">double</span> k4<span class="token punctuation">;</span>   <span class="token comment">//径向畸变, 4st</span>
    <span class="token keyword">double</span> k5<span class="token punctuation">;</span>   <span class="token comment">//径向畸变, 5nd</span>
    <span class="token keyword">double</span> k6<span class="token punctuation">;</span>   <span class="token comment">//径向畸变, 6rd</span>
<span class="token punctuation">}</span> <span class="token keyword">ScSensorIntrinsicParameters</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2527-scsensorextrinsicparameters"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2527-scsensorextrinsicparameters" data-id="_2527-scsensorextrinsicparameters" class="anchor"><span>2.5.2.7. ScSensorExtrinsicParameters</span></a></h3><p><strong>功能：</strong></p><p>相机外参 R 与 T，用于 depth 与 rgb 图像的对齐，参考公式如下:</p><p><img src="./2. BaseSDK (C_C++)_files/ScSensorExtrinsicParameters.png" data-origin="pic/ScSensorExtrinsicParameters.png" alt="ScSensorExtrinsicParameters" class="medium-zoom-image"></p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">double</span> rotation<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment">//3×3 的旋转矩阵</span>
    <span class="token keyword">double</span> translation<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//3×1 平移矩阵</span>
<span class="token punctuation">}</span> <span class="token keyword">ScSensorExtrinsicParameters</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2528-scframe"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2528-scframe" data-id="_2528-scframe" class="anchor"><span>2.5.2.8. ScFrame</span></a></h3><p><strong>功能：</strong></p><p>图像信息。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">uint32_t</span>      frameIndex<span class="token punctuation">;</span>        <span class="token comment">//表示图像帧索引号</span>
    <span class="token keyword">ScFrameType</span>   frameType<span class="token punctuation">;</span>         <span class="token comment">//表示图像数据类型</span>
    <span class="token keyword">ScPixelFormat</span> pixelFormat<span class="token punctuation">;</span>       <span class="token comment">//表示像素类型</span>
    <span class="token keyword">uint8_t</span><span class="token operator">*</span>      pFrameData<span class="token punctuation">;</span>        <span class="token comment">//表示指向图像数据缓存的指针</span>
    <span class="token keyword">uint32_t</span>      dataLen<span class="token punctuation">;</span>           <span class="token comment">//表示图像数据的长度，单位为字节</span>
    <span class="token keyword">float</span>         exposureTime<span class="token punctuation">;</span>      <span class="token comment">//表示曝光时间，单位为毫秒</span>
    <span class="token keyword">uint8_t</span>       depthRange<span class="token punctuation">;</span>        <span class="token comment">//表示当前帧的深度范围，仅对深度图像有效</span>
    <span class="token keyword">uint16_t</span>      width<span class="token punctuation">;</span>             <span class="token comment">//表示图像宽度</span>
    <span class="token keyword">uint16_t</span>      height<span class="token punctuation">;</span>            <span class="token comment">//表示图像高度</span>
    <span class="token keyword">uint64_t</span>      deviceTimestamp<span class="token punctuation">;</span>   <span class="token comment">//表示帧在设备上生成时的时间戳，不包括帧处理和传输时间</span>
<span class="token punctuation">}</span> <span class="token keyword">ScFrame</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_2529-scframeready"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2529-scframeready" data-id="_2529-scframeready" class="anchor"><span>2.5.2.9. ScFrameReady</span></a></h3><p><strong>功能：</strong></p><p>图像数据是否就绪（1 代表就绪，0 代表未就绪）。</p><p><strong>枚举值：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">uint32_t</span> depth            <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//表示深度图像数据是否就绪</span>
    <span class="token keyword">uint32_t</span> ir               <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//表示灰度图像数据是否就绪</span>
    <span class="token keyword">uint32_t</span> color            <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//表示彩色图像数据是否就绪</span>
    <span class="token keyword">uint32_t</span> transformedColor <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//表示对齐到深度传感器空间的彩色图像是否就绪</span>
    <span class="token keyword">uint32_t</span> transformedDepth <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">//表示对齐到彩色传感器空间的深度图像是否就绪</span>
    <span class="token keyword">uint32_t</span> reserved         <span class="token operator">:</span> <span class="token number">27</span><span class="token punctuation">;</span>   <span class="token comment">//预留位</span>
<span class="token punctuation">}</span> <span class="token keyword">ScFrameReady</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25210-scdeviceinfo"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25210-scdeviceinfo" data-id="_25210-scdeviceinfo" class="anchor"><span>2.5.2.10. ScDeviceInfo</span></a></h3><p><strong>功能：</strong></p><p>设备信息。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">char</span>            productName<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//表示设备的产品名称</span>
    <span class="token keyword">char</span>            uri<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token comment">//表示设备的标识符</span>
    <span class="token keyword">char</span>            alias<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token comment">//表示设备的别名</span>
    <span class="token keyword">char</span>            serialNumber<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//表示设备的序列号</span>
    <span class="token keyword">char</span>            ip<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token comment">//表示设备的 IP 地址</span>
    <span class="token keyword">ScConnectStatus</span> status<span class="token punctuation">;</span>             <span class="token comment">//表示设备连接状态</span>
<span class="token punctuation">}</span> <span class="token keyword">ScDeviceInfo</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25211-sctimefilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25211-sctimefilterparams" data-id="_25211-sctimefilterparams" class="anchor"><span>2.5.2.11. ScTimeFilterParams</span></a></h3><p><strong>功能：</strong></p><p>时间滤波参数。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int32_t</span> threshold<span class="token punctuation">;</span>   <span class="token comment">//表示滤波阈值，[1，6]，值越大，滤波效果越明显，点云抖动越小</span>
    <span class="token keyword">bool</span> enable<span class="token punctuation">;</span>         <span class="token comment">//表示滤波是否打开，true 代表打开，false 代表关闭</span>
<span class="token punctuation">}</span> <span class="token keyword">ScTimeFilterParams</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25212-scconfidencefilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25212-scconfidencefilterparams" data-id="_25212-scconfidencefilterparams" class="anchor"><span>2.5.2.12. ScConfidenceFilterParams</span></a></h3><p><strong>功能：</strong></p><p>置信度滤波参数。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int32_t</span> threshold<span class="token punctuation">;</span>   <span class="token comment">//表示滤波阈值，[1，100]，数值越大，过滤效果越明显，过滤掉的点数越多</span>
    <span class="token keyword">bool</span> enable<span class="token punctuation">;</span>         <span class="token comment">//表示滤波是否打开，true 代表打开，false 代表关闭</span>
<span class="token punctuation">}</span> <span class="token keyword">ScConfidenceFilterParams</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25213-scflyingpixelfilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25213-scflyingpixelfilterparams" data-id="_25213-scflyingpixelfilterparams" class="anchor"><span>2.5.2.13. ScFlyingPixelFilterParams</span></a></h3><p><strong>功能：</strong></p><p>去飞点滤波参数。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int32_t</span> threshold<span class="token punctuation">;</span>   <span class="token comment">//表示滤波阈值，[0，16]，数值越大，过滤效果越明显，过滤掉的点数越多</span>
    <span class="token keyword">bool</span> enable<span class="token punctuation">;</span>         <span class="token comment">//表示滤波是否打开，true 代表打开，false 代表关闭</span>
<span class="token punctuation">}</span> <span class="token keyword">ScFlyingPixelFilterParams</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25214-scirgmmcorrectionparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25214-scirgmmcorrectionparams" data-id="_25214-scirgmmcorrectionparams" class="anchor"><span>2.5.2.14. ScIRGMMCorrectionParams</span></a></h3><p><strong>功能：</strong></p><p>IR gain 值校正参数。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int32_t</span> threshold<span class="token punctuation">;</span>   <span class="token comment">//表示滤波阈值，[1，100]，数值越大，校正效果越明显</span>
    <span class="token keyword">bool</span> enable<span class="token punctuation">;</span>         <span class="token comment">//表示滤波是否打开，true 代表打开，false 代表关闭</span>
<span class="token punctuation">}</span> <span class="token keyword">ScIRGMMCorrectionParams</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25215-scinputsignalparamsforhwtrigger"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25215-scinputsignalparamsforhwtrigger" data-id="_25215-scinputsignalparamsforhwtrigger" class="anchor"><span>2.5.2.15. ScInputSignalParamsForHWTrigger</span></a></h3><p><strong>功能：</strong></p><p>硬件触发的输入信号参数。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">uint16_t</span> width<span class="token punctuation">;</span>                  <span class="token comment">//表示输入信号宽度，阈值[1，65535]</span>
    <span class="token keyword">uint16_t</span> interval<span class="token punctuation">;</span>               <span class="token comment">//表示输入信号的间隔，阈值[34000，65535]</span>
    <span class="token keyword">uint8_t</span>  polarity<span class="token punctuation">;</span>               <span class="token comment">//表示电平有效性，[0，1]，0表示低电平有效，1表示高电平有效</span>
<span class="token punctuation">}</span> <span class="token keyword">ScInputSignalParamsForHWTrigger</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25216-scoutputsignalparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25216-scoutputsignalparams" data-id="_25216-scoutputsignalparams" class="anchor"><span>2.5.2.16. ScOutputSignalParams</span></a></h3><p><strong>功能：</strong></p><p>输出信号参数。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">uint16_t</span> width<span class="token punctuation">;</span>       <span class="token comment">//表示输入信号宽度，阈值[1，65535]</span>
    <span class="token keyword">uint16_t</span> delay<span class="token punctuation">;</span>       <span class="token comment">//表示输出信号的延迟时间，阈值[0，65535]</span>
    <span class="token keyword">uint8_t</span>  polarity<span class="token punctuation">;</span>    <span class="token comment">//表示电平有效性，[0，1]，0表示低电平有效，1表示高电平有效</span>
<span class="token punctuation">}</span> <span class="token keyword">ScOutputSignalParams</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><h3 id="_25217-sctimesyncconfig"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25217-sctimesyncconfig" data-id="_25217-sctimesyncconfig" class="anchor"><span>2.5.2.17. ScTimeSyncConfig</span></a></h3><p><strong>功能：</strong></p><p>对时参数。</p><p><strong>成员：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">typedef <span class="token keyword">struct</span>
<span class="token punctuation">{</span>
    <span class="token keyword">uint8_t</span> flag<span class="token punctuation">;</span>     <span class="token comment">//!&lt; 0:表示关闭对时，1:表示开启NTP对时，2:表示开启PTP对时，只有NTP对时需要IP</span>
    <span class="token keyword">uint8_t</span> ip<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//!&lt; 只有NTP对时需要ip</span>
<span class="token punctuation">}</span> ScTimeSyncConfig<span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre></div>
<button class="docsify-tabs__tab" data-tab="api 介绍">API 介绍</button>
<div class="docsify-tabs__content" data-tab-content="api 介绍">

<h3 id="_2531-scinitialize"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2531-scinitialize" data-id="_2531-scinitialize" class="anchor"><span>2.5.3.1. scInitialize</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scInitialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>完成 SDK 初始化，需要在调用其他 API 之前先调用</p><p><strong>函数参数：</strong></p><p>无</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_2532-scshutdown"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2532-scshutdown" data-id="_2532-scshutdown" class="anchor"><span>2.5.3.2. scShutdown</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>完成 SDK 注销，释放 SDK 使用过程中创建的所有资源。该接口调用之后，不应调用除 scInitialize 之外的其他接口</p><p><strong>函数参数：</strong></p><p>无</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_2533-scgetsdkversion"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2533-scgetsdkversion" data-id="_2533-scgetsdkversion" class="anchor"><span>2.5.3.3. scGetSDKVersion</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetSDKVersion</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> pSDKVersion<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> length<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取 SDK 的版本号：x.x.x</p><p><strong>函数参数：</strong></p><p>无</p><p><strong>返回值：</strong></p><p>SDK 版本号</p><h3 id="_2534-scgetdevicecount"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2534-scgetdevicecount" data-id="_2534-scgetdevicecount" class="anchor"><span>2.5.3.4. scGetDeviceCount</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetDeviceCount</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span> pDeviceCount<span class="token punctuation">,</span> <span class="token keyword">uint32_t</span> scanTime<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取已连接的设备数目</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">uint32_t</span>* pDeviceCount：指向 32 位整数变量的指针，在该变量中返回设备数量</p><p><span style="color: #4ec9b0; font-weight: bold">uint32_t</span> scanTime：单位为毫秒，数值范围为（0，65535）。
当设备计数不为 0 时，API 立即返回。
当设备计数为 0 时，除非设备计数不为 0，否则 API 最多等待等待时间（ms）。</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_2535-scgetdeviceinfolist"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2535-scgetdeviceinfolist" data-id="_2535-scgetdeviceinfolist" class="anchor"><span>2.5.3.5. scGetDeviceInfoList</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetDeviceInfoList</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> deviceCount<span class="token punctuation">,</span> <span class="token keyword">ScDeviceInfo</span><span class="token operator">*</span> pDevicesInfoList<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取 deviceCount 个数的设备信息列表</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">uint32_t</span> deviceCount：需要获取信息列表的设备个数</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25210-scdeviceinfo"><strong>ScDeviceInfo</strong></a>* pDevicesInfo：返回设备信息列表，其应该指向大小为 sizeof(ScDeviceInfo)*deviceCount 大小的缓存</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_2536-scopendevicebysn"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2536-scopendevicebysn" data-id="_2536-scopendevicebysn" class="anchor"><span>2.5.3.6. scOpenDeviceBySN</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scOpenDeviceBySN</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> pSN<span class="token punctuation">,</span> <span class="token keyword">ScDeviceHandle</span><span class="token operator">*</span> pDevice<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>使用设备 SN 打开设备</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">const</span> char* pSN：设备 SN</p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span>* pDevice： 打开设备成功后，返回的设备句柄</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_2537-scopendevicebyip"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2537-scopendevicebyip" data-id="_2537-scopendevicebyip" class="anchor"><span>2.5.3.7. scOpenDeviceByIP</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scOpenDeviceByIP</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> pIP<span class="token punctuation">,</span> <span class="token keyword">ScDeviceHandle</span><span class="token operator">*</span> pDevice<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>使用设备 IP 地址打开设备</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">const</span> char* pIP：设备的 IP 地址</p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span>* pDevice： 打开设备成功后，返回的设备句柄</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_2538-scclosedevice"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2538-scclosedevice" data-id="_2538-scclosedevice" class="anchor"><span>2.5.3.8. scCloseDevice</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scCloseDevice</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span><span class="token operator">*</span> pDevice<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>关闭设备</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span>* pDevice： 要关闭设备的句柄</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_2539-scstartstream"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2539-scstartstream" data-id="_2539-scstartstream" class="anchor"><span>2.5.3.9. scStartStream</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scStartStream</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>打开数据流</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 要关闭数据流的设备的句柄</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25310-scstopstream"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25310-scstopstream" data-id="_25310-scstopstream" class="anchor"><span>2.5.3.10. scStopStream</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scStopStream</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>关闭数据流</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 要关闭数据流的设备的句柄</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25311-scgetframeready"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25311-scgetframeready" data-id="_25311-scgetframeready" class="anchor"><span>2.5.3.11. scGetFrameReady</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetFrameReady</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">uint16_t</span> waitTime<span class="token punctuation">,</span> <span class="token keyword">ScFrameReady</span><span class="token operator">*</span> pFrameReady<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取图像就绪状态。调用函数 scGetFrame 前必须调用此函数，否则无法获取图像。</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">uint16_t</span> waitTime：允许等待图像就绪的超时时间(ms)，取值范围为(0，65535)。此值与图像的帧率有关，建议值设置为 2*1000/fps。例如当前的帧率为 20，则建议设置 waitTime 为 2 * 1000 / 20 = 100。如果设置 waitTime 为 40，则调用函数时可能返回 ScRetGetFrameReadyTimeOut。</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2529-scframeready"><strong>ScFrameReady</strong></a>* pFrameReady：返回图像的就绪状态</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25312-scgetframe"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25312-scgetframe" data-id="_25312-scgetframe" class="anchor"><span>2.5.3.12. scGetFrame</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetFrame</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScFrameType</span> frameType<span class="token punctuation">,</span> <span class="token keyword">ScFrame</span><span class="token operator">*</span> pScFrame<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取指定图像类型的图像数据。调用此函数前必须调用 scGetFrameReady。</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2511-scframetype"><strong>ScFrameType</strong></a> frameType：待获取图像的类型</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2528-scframe"><strong>ScFrame</strong></a>* pScFrame：返回的图像数据</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25313-scsetworkmode"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25313-scsetworkmode" data-id="_25313-scsetworkmode" class="anchor"><span>2.5.3.13. scSetWorkMode</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetWorkMode</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScWorkMode</span> mode<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置相机的工作模式</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2516-scworkmode"><strong>ScWorkMode</strong></a> mode：要设置的工作模式，对于 ActiveMode ，将时间过滤器的默认值设置为 True ，对于 SlaveMode ，将时间过滤器的默认值设置为 False</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25314-scgetworkmode"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25314-scgetworkmode" data-id="_25314-scgetworkmode" class="anchor"><span>2.5.3.14. scGetWorkMode</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetWorkMode</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScWorkMode</span><span class="token operator">*</span> pMode<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取相机的工作模式</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2516-scworkmode"><strong>ScWorkMode</strong></a>* pMode：获取到的设备的工作模式</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25315-scsoftwaretriggeronce"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25315-scsoftwaretriggeronce" data-id="_25315-scsoftwaretriggeronce" class="anchor"><span>2.5.3.15. scSoftwareTriggerOnce</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSoftwareTriggerOnce</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>执行一次软件触发，仅当相机处于 SC_SOFTWARE_TRIGGER_MODE 时有效</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25316-scgetsensorintrinsicparameters"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25316-scgetsensorintrinsicparameters" data-id="_25316-scgetsensorintrinsicparameters" class="anchor"><span>2.5.3.16. scGetSensorIntrinsicParameters</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetSensorIntrinsicParameters</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorType</span> sensorType<span class="token punctuation">,</span> <span class="token keyword">ScSensorIntrinsicParameters</span><span class="token operator">*</span> pSensorIntrinsicParameters<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取传感器镜头的内参</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype"><strong>ScSensorType</strong></a> sensorType：传感器类型</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2526-scsensorintrinsicparameters"><strong>ScSensorIntrinsicParameters</strong></a>* pSensorIntrinsicParameters：返回传感器镜头的内参</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25317-scgetsensorextrinsicparameters"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25317-scgetsensorextrinsicparameters" data-id="_25317-scgetsensorextrinsicparameters" class="anchor"><span>2.5.3.17. scGetSensorExtrinsicParameters</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetSensorExtrinsicParameters</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorExtrinsicParameters</span><span class="token operator">*</span> pSensorExtrinsicParameters<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取设备的外参</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2527-scsensorextrinsicparameters"><strong>ScSensorExtrinsicParameters</strong></a>* pSensorExtrinsicParameters：返回设备的外参</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25318-scgetfirmwareversion"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25318-scgetfirmwareversion" data-id="_25318-scgetfirmwareversion" class="anchor"><span>2.5.3.18. scGetFirmwareVersion</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetFirmwareVersion</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> pFirmwareVersion<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> length<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取设备的固件版本</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">char</span>* pFirmwareVersion：返回设备的固件版本</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> length：pFirmwareVersion 指向的缓存的字节长度</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25319-scgetdevicemacaddress"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25319-scgetdevicemacaddress" data-id="_25319-scgetdevicemacaddress" class="anchor"><span>2.5.3.19. scGetDeviceMACAddress</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetDeviceMACAddress</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> pMACAddress<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取设备的 MAC 地址</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">char</span>* pMACAddress：返回设备的 MAC 地址，其默认是一个字节长度为 18，以‘\0’结尾的字符串</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25320-scsetirgmmgain"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25320-scsetirgmmgain" data-id="_25320-scsetirgmmgain" class="anchor"><span>2.5.3.20. scSetIRGMMGain</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetIRGMMGain</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">uint8_t</span> gmmgain<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置 IR 图像的数字增益</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">uint8_t</span> gmmgain：要设置给设备的 IR 增益值</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25321-scgetirgmmgain"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25321-scgetirgmmgain" data-id="_25321-scgetirgmmgain" class="anchor"><span>2.5.3.21. scGetIRGMMGain</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetIRGMMGain</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">uint8_t</span><span class="token operator">*</span> pGmmgain<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取 IR 图像的数字增益</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">uint8_t</span>* pGmmgain：返回设备的 IR 增益值</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25322-scsetirgmmcorrection"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25322-scsetirgmmcorrection" data-id="_25322-scsetirgmmcorrection" class="anchor"><span>2.5.3.22. scSetIRGMMCorrection</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetIRGMMCorrection</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">ScIRGMMCorrectionParams</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置设备上的 IR GMM 校正的值</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">const</span> <a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25214-scirgmmcorrectionparams"><strong>ScIRGMMCorrectionParams</strong></a> params：IR GMM 校正的值</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25323-scgetirgmmcorrection"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25323-scgetirgmmcorrection" data-id="_25323-scgetirgmmcorrection" class="anchor"><span>2.5.3.23. scGetIRGMMCorrection</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetIRGMMCorrection</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScIRGMMCorrectionParams</span><span class="token operator">*</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取设备上的 IR GMM 校正的值</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25214-scirgmmcorrectionparams"><strong>ScIRGMMCorrectionParams</strong></a>* params：IR GMM 校正的值</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25324-scsetcolorpixelformat"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25324-scsetcolorpixelformat" data-id="_25324-scsetcolorpixelformat" class="anchor"><span>2.5.3.24. scSetColorPixelFormat</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetColorPixelFormat</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span><span class="token keyword">ScPixelFormat</span> pixelFormat<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置彩色图像的像素格式，目前仅支持 RGB 和 BGR 格式</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2512-scpixelformat"><strong>ScPixelFormat</strong></a> pixelFormat：要设置的彩色图像的像素格式</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25325-scsetcolorgain"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25325-scsetcolorgain" data-id="_25325-scsetcolorgain" class="anchor"><span>2.5.3.25. scSetColorGain</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetColorGain</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">float</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>在手动曝光模式中，设置彩色传感器曝光模式的颜色增益</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">float</span> params：NYX650 的颜色增益值在[0，100]范围内。不同的产品具有不同的范围，请参考产品说明书</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25326-scgetcolorgain"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25326-scgetcolorgain" data-id="_25326-scgetcolorgain" class="anchor"><span>2.5.3.26. scGetColorGain</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetColorGain</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">float</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取彩色传感器曝光模式的颜色增益</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">float</span> params：颜色增益值</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25327-scsetcolorresolution"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25327-scsetcolorresolution" data-id="_25327-scsetcolorresolution" class="anchor"><span>2.5.3.27. scSetColorResolution</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetColorResolution</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> w<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> h<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置彩色图像的分辨率</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> w：图像的宽</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> h：图像的高</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25328-scgetcolorresolution"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25328-scgetcolorresolution" data-id="_25328-scgetcolorresolution" class="anchor"><span>2.5.3.28. scGetColorResolution</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetColorResolution</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pW<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pH<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取彩色图像的分辨率</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span>* pW：返回彩色图像的图像宽</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span>* pH：返回彩色图像的图像高</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25329-scgetsupportedresolutionlist"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25329-scgetsupportedresolutionlist" data-id="_25329-scgetsupportedresolutionlist" class="anchor"><span>2.5.3.29. scGetSupportedResolutionList</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetSupportedResolutionList</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorType</span> type<span class="token punctuation">,</span> <span class="token keyword">ScResolutionList</span><span class="token operator">*</span> pList<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取传感器支持的图像分辨率列表</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype"><strong>ScSensorType</strong></a> type：传感器类型</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2525-scresolutionlist"><strong>ScResolutionList</strong></a>* pList：支持的图像分辨率列表</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25330-scsetframerate"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25330-scsetframerate" data-id="_25330-scsetframerate" class="anchor"><span>2.5.3.30. scSetFrameRate</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetFrameRate</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> value<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置设备的图像帧率，同时对深度和彩色图像生效。此接口是同步接口，耗时较长，大约需要 500ms</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> value：要设置的目标帧率</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25331-scgetframerate"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25331-scgetframerate" data-id="_25331-scgetframerate" class="anchor"><span>2.5.3.31. scGetFrameRate</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetFrameRate</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pValue<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取设备的图像帧率</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span>* pValue：返回设备的图像帧率</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25332-scsetexposurecontrolmode"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25332-scsetexposurecontrolmode" data-id="_25332-scsetexposurecontrolmode" class="anchor"><span>2.5.3.32. scSetExposureControlMode</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetExposureControlMode</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorType</span> sensorType<span class="token punctuation">,</span> <span class="token keyword">ScExposureControlMode</span> controlMode<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置传感器的曝光模式</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype"><strong>ScSensorType</strong></a> sensorType：要设置曝光模式的传感器类型</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2517-scexposurecontrolmode"><strong>ScExposureControlMode</strong></a> controlMode：要设置的曝光模式</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25333-scgetexposurecontrolmode"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25333-scgetexposurecontrolmode" data-id="_25333-scgetexposurecontrolmode" class="anchor"><span>2.5.3.33. scGetExposureControlMode</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetExposureControlMode</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorType</span> sensorType<span class="token punctuation">,</span> <span class="token keyword">ScExposureControlMode</span><span class="token operator">*</span> pControlMode<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取传感器的曝光模式</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype"><strong>ScSensorType</strong></a> sensorType：要获取曝光模式的传感器类型</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2517-scexposurecontrolmode"><strong>ScExposureControlMode</strong></a> controlMode：返回传感器的曝光模式</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25334-scsetexposuretime"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25334-scsetexposuretime" data-id="_25334-scsetexposuretime" class="anchor"><span>2.5.3.34. scSetExposureTime</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetExposureTime</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorType</span> sensorType<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> exposureTime<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置传感器的曝光时间</p><p>深度传感器，只支持在手动曝光模式下，设置曝光时间</p><p>彩色传感器，支持在自动曝光模式下，设置最大曝光时间；支持在手动曝光模式下，设置曝光时间</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype"><strong>ScSensorType</strong></a> sensorType：要获取曝光时间的传感器类型</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> exposureTime：要设置的曝光时间参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25335-scgetexposuretime"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25335-scgetexposuretime" data-id="_25335-scgetexposuretime" class="anchor"><span>2.5.3.35. scGetExposureTime</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetExposureTime</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorType</span> sensorType<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pExposureTime<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取传感器的曝光时间</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype"><strong>ScSensorType</strong></a> sensorType：要获取曝光时间的传感器类型</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t*</span> pExposureTime：返回获取的曝光时间参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25336-scsetcoloraecmaxexposuretime"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25336-scsetcoloraecmaxexposuretime" data-id="_25336-scsetcoloraecmaxexposuretime" class="anchor"><span>2.5.3.36. scSetColorAECMaxExposureTime</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetColorAECMaxExposureTime</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> exposureTime<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置彩色传感器在自动曝光模式下的最大曝光时间。该接口在自动曝光模式下使用</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> exposureTime：曝光时间参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25337-scgetcoloraecmaxexposuretime"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25337-scgetcoloraecmaxexposuretime" data-id="_25337-scgetcoloraecmaxexposuretime" class="anchor"><span>2.5.3.37. scGetColorAECMaxExposureTime</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetColorAECMaxExposureTime</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pExposureTime<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取彩色传感器在自动曝光模式下的最大曝光时间。该接口在自动曝光模式下使用</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t*</span> pExposureTime：返回获取的曝光时间参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25338-scgetmaxexposuretime"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25338-scgetmaxexposuretime" data-id="_25338-scgetmaxexposuretime" class="anchor"><span>2.5.3.38. scGetMaxExposureTime</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetMaxExposureTime</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScSensorType</span> sensorType<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pMaxExposureTime<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取传感器的最大曝光时间</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2513-scsensortype"><strong>ScSensorType</strong></a> sensorType：要获取曝光时间的传感器类型</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span>* pMaxExposureTime：返回获取的最大曝光时间，在不同的帧率下，最大曝光时间有所不同。</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25339-scsettimefilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25339-scsettimefilterparams" data-id="_25339-scsettimefilterparams" class="anchor"><span>2.5.3.39. scSetTimeFilterParams</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetTimeFilterParams</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScTimeFilterParams</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置深度图像的时域滤波参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25211-sctimefilterparams"><strong>ScTimeFilterParams</strong></a> params：指向存储返回值的变量的指针</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25340-scgettimefilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25340-scgettimefilterparams" data-id="_25340-scgettimefilterparams" class="anchor"><span>2.5.3.40. scGetTimeFilterParams</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetTimeFilterParams</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScTimeFilterParams</span><span class="token operator">*</span> pParams<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取深度图像的时域滤波参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25211-sctimefilterparams"><strong>ScTimeFilterParams</strong></a> params：指向存储返回值的变量的指针</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25341-scsetconfidencefilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25341-scsetconfidencefilterparams" data-id="_25341-scsetconfidencefilterparams" class="anchor"><span>2.5.3.41. scSetConfidenceFilterParams</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetConfidenceFilterParams</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span><span class="token keyword">ScConfidenceFilterParams</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置深度图像的置信度滤波参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25212-scconfidencefilterparams"><strong>ScConfidenceFilterParams</strong></a> params：指向存储返回值的变量的指针</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25342-scgetconfidencefilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25342-scgetconfidencefilterparams" data-id="_25342-scgetconfidencefilterparams" class="anchor"><span>2.5.3.42. scGetConfidenceFilterParams</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetConfidenceFilterParams</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScConfidenceFilterParams</span> <span class="token operator">*</span>pParams<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取深度图像的置信度滤波参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25212-scconfidencefilterparams"><strong>ScConfidenceFilterParams</strong></a> params：指向存储返回值的变量的指针</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25343-scsetflyingpixelfilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25343-scsetflyingpixelfilterparams" data-id="_25343-scsetflyingpixelfilterparams" class="anchor"><span>2.5.3.43. scSetFlyingPixelFilterParams</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetFlyingPixelFilterParams</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">ScFlyingPixelFilterParams</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置深度图像的去飞点滤波参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">const</span> <a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25213-scflyingpixelfilterparams"><strong>ScFlyingPixelFilterParams</strong></a> params：滤波参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25344-scgetflyingpixelfilterparams"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25344-scgetflyingpixelfilterparams" data-id="_25344-scgetflyingpixelfilterparams" class="anchor"><span>2.5.3.44. scGetFlyingPixelFilterParams</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetFlyingPixelFilterParams</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScFlyingPixelFilterParams</span><span class="token operator">*</span> params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取深度图像的去飞点滤波参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25213-scflyingpixelfilterparams"><strong>ScFlyingPixelFilterParams</strong></a>* params：滤波参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25345-scsetfillholefilterenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25345-scsetfillholefilterenabled" data-id="_25345-scsetfillholefilterenabled" class="anchor"><span>2.5.3.45. scSetFillHoleFilterEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetFillHoleFilterEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span> bEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置深度图像的补洞滤波开启关闭</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span> bEnabled：true 开启，false 关闭</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25346-scgetfillholefilterenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25346-scgetfillholefilterenabled" data-id="_25346-scgetfillholefilterenabled" class="anchor"><span>2.5.3.46. scGetFillHoleFilterEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetFillHoleFilterEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token operator">*</span> pEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取深度图像的补洞滤波开启关闭</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span>* pEnabled：true 开启，false 关闭</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25347-scsetspatialfilterenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25347-scsetspatialfilterenabled" data-id="_25347-scsetspatialfilterenabled" class="anchor"><span>2.5.3.47. scSetSpatialFilterEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetSpatialFilterEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span> bEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置深度图像的空间滤波开启关闭</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span> bEnabled：true 开启，false 关闭</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25348-scgetspatialfilterenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25348-scgetspatialfilterenabled" data-id="_25348-scgetspatialfilterenabled" class="anchor"><span>2.5.3.48. scGetSpatialFilterEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetSpatialFilterEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token operator">*</span> pEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取深度图像的空间滤波开启关闭</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span>* pEnabled：true 开启，false 关闭</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25349-scsettransformcolorimgtodepthsensorenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25349-scsettransformcolorimgtodepthsensorenabled" data-id="_25349-scsettransformcolorimgtodepthsensorenabled" class="anchor"><span>2.5.3.49. scSetTransformColorImgToDepthSensorEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetTransformColorImgToDepthSensorEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span> bEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置彩色图像对齐到深度相机空间的开关，只有带彩色传感器的设备才支持此操作。如果打开开关，则调用 scGetFrameReady 时，ScFrameReady.transformedColor 的值为 1，然后调用 scGetFrame 可以得到 ScTransformColorImgToDepthSensorFrame 类型的彩色图像，其大小与深度图像大小相同。</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device：设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span> bEnabled：true 打开对齐，false 关闭对齐</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25350-scgettransformcolorimgtodepthsensorenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25350-scgettransformcolorimgtodepthsensorenabled" data-id="_25350-scgettransformcolorimgtodepthsensorenabled" class="anchor"><span>2.5.3.50. scGetTransformColorImgToDepthSensorEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetTransformColorImgToDepthSensorEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span> <span class="token operator">*</span>bEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取彩色图像对齐到深度相机空间的开关状态</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span> *bEnabled：返回开关状态</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25351-scsettransformdepthimgtocolorsensorenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25351-scsettransformdepthimgtocolorsensorenabled" data-id="_25351-scsettransformdepthimgtocolorsensorenabled" class="anchor"><span>2.5.3.51. scSetTransformDepthImgToColorSensorEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetTransformDepthImgToColorSensorEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span> bEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置深度图像对齐到彩色相机空间的开关，只有带彩色传感器的设备才支持此操作。如果打开开关，则调用 scGetFrameReady 时，ScFrameReady.transformedDepth 的值为 1，然后调用 scGetFrame 可以得到 ScTransformDepthImgToColorSensorFrame 类型的深度图像，其大小与彩色图像大小相同。</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span> bEnabled：true 打开对齐，false 关闭对齐</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25352-scgettransformdepthimgtocolorsensorenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25352-scgettransformdepthimgtocolorsensorenabled" data-id="_25352-scgettransformdepthimgtocolorsensorenabled" class="anchor"><span>2.5.3.52. scGetTransformDepthImgToColorSensorEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetTransformDepthImgToColorSensorEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span> <span class="token operator">*</span>bEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取深度图像对齐到彩色相机空间的开关状态</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span> *bEnabled：返回开关状态</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25353-sctransformdepthpointtocolorpoint"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25353-sctransformdepthpointtocolorpoint" data-id="_25353-sctransformdepthpointtocolorpoint" class="anchor"><span>2.5.3.53. scTransformDepthPointToColorPoint</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scTransformDepthPointToColorPoint</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">ScDepthVector3</span> depthPoint<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">ScVector2u16</span> colorSize<span class="token punctuation">,</span> <span class="token keyword">ScVector2u16</span><span class="token operator">*</span> pPointInColor<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>对齐深度图像上的点到彩色图像空间，可以在彩色图像上获得与传入的深度图像坐标点相对应的点的坐标</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">const</span> <a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2523-scdepthvector3"><strong>ScDepthVector3</strong></a> depthPoint：深度图像的坐标点</p><p><span style="color: #4ec9b0; font-weight: bold">const</span> <a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2522-scvector2u16"><strong>ScVector2u16</strong></a> colorSize：彩色图像尺寸</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2522-scvector2u16"><strong>ScVector2u16</strong></a>* pPointInColor：获得的与深度图像的坐标点对应的彩色图像坐标点</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25354-scconvertdepthtopointcloud"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25354-scconvertdepthtopointcloud" data-id="_25354-scconvertdepthtopointcloud" class="anchor"><span>2.5.3.54. scConvertDepthToPointCloud</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scConvertDepthToPointCloud</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScDepthVector3</span><span class="token operator">*</span> pDepthVector<span class="token punctuation">,</span> <span class="token keyword">ScVector3f</span><span class="token operator">*</span> pWorldVector<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> pointCount<span class="token punctuation">,</span> <span class="token keyword">ScSensorIntrinsicParameters</span><span class="token operator">*</span> pSensorParam<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>把传入的深度图像坐标点集合转换为世界坐标系点集合。世界坐标原点在深度传感器镜头中心，Z 轴垂直与设备前盖板，其正方向从设备指向远方；X 轴从深度镜头指向激光器，其正方向从设备指向远方；Y 轴垂直与设备指向地面，其正方向从设备指向远方。</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2523-scdepthvector3"><strong>ScDepthVector3</strong></a>* pDepthVector：深度图像的坐标点的集合</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2521-scvector3f"><strong>ScVector3f</strong></a>* pWorldVector：转换后点云的坐标点的集合</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> pointCount：坐标点的数目</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2526-scsensorintrinsicparameters"><strong>ScSensorIntrinsicParameters</strong></a>* pSensorParam：传感器内参</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25355-scconvertdepthframetopointcloudvector"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25355-scconvertdepthframetopointcloudvector" data-id="_25355-scconvertdepthframetopointcloudvector" class="anchor"><span>2.5.3.55. scConvertDepthFrameToPointCloudVector</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scConvertDepthFrameToPointCloudVector</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">ScFrame</span><span class="token operator">*</span> pDepthFrame<span class="token punctuation">,</span> <span class="token keyword">ScVector3f</span><span class="token operator">*</span> pWorldVector<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>把传入的深度图像转换为世界坐标系点集合，转换后的世界坐标系点集合的大小为 ScFrame.width * ScFrame.height，支持 ScDepthFrame 和 ScTransformDepthImgToColorSensorFrame 图像</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">const</span> <a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2528-scframe"><strong>ScFrame</strong></a>* pDepthFrame：深度图像</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2521-scvector3f"><strong>ScVector3f</strong></a>* pWorldVector：转换后点云的坐标点的集合</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25356-scsethotplugstatuscallback"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25356-scsethotplugstatuscallback" data-id="_25356-scsethotplugstatuscallback" class="anchor"><span>2.5.3.56. scSetHotPlugStatusCallback</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetHotPlugStatusCallback</span><span class="token punctuation">(</span>PtrHotPlugStatusCallback pCallback<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> pUserData<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置设备热拔插状态回调函数</p><p><strong>函数参数：</strong></p><p>PtrHotPlugStatusCallback pCallback： 回调函数</p><p><span style="color: #4ec9b0; font-weight: bold">const</span> <span style="color: #4ec9b0; font-weight: bold">void</span>* pUserData：用户数据，可以为空</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25357-screbootdevie"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25357-screbootdevie" data-id="_25357-screbootdevie" class="anchor"><span>2.5.3.57. scRebootDevie</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scRebootDevie</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>重启设备</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25358-scsethdrmodeenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25358-scsethdrmodeenabled" data-id="_25358-scsethdrmodeenabled" class="anchor"><span>2.5.3.58. scSetHDRModeEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetHDRModeEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span> bEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>开启或关闭 HDR 功能，设备需在手动曝光模式，因此，如果您想切换到自动曝光，请先将 HDR 模式设置为禁用</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span> bEnabled：true 开启，false 关闭</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25359-scgethdrmodeenabled"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25359-scgethdrmodeenabled" data-id="_25359-scgethdrmodeenabled" class="anchor"><span>2.5.3.59. scGetHDRModeEnabled</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetHDRModeEnabled</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token operator">*</span> bEnabled<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取 HDR 功能开启状态</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">bool</span>* bEnabled：true 开启，false 关闭</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25360-scsetinputsignalparamsforhwtrigger"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25360-scsetinputsignalparamsforhwtrigger" data-id="_25360-scsetinputsignalparamsforhwtrigger" class="anchor"><span>2.5.3.60. scSetInputSignalParamsForHWTrigger</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetInputSignalParamsForHWTrigger</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScInputSignalParamsForHWTrigger</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置硬触发的输入信号参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25215-scinputsignalparamsforhwtrigger"><strong>ScInputSignalParamsForHWTrigger</strong></a> params：硬触发的输入信号参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25361-scgetinputsignalparamsforhwtrigger"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25361-scgetinputsignalparamsforhwtrigger" data-id="_25361-scgetinputsignalparamsforhwtrigger" class="anchor"><span>2.5.3.61. scGetInputSignalParamsForHWTrigger</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetInputSignalParamsForHWTrigger</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">ScInputSignalParamsForHWTrigger</span><span class="token operator">*</span> pParams<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取硬触发的输入信号参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25215-scinputsignalparamsforhwtrigger"><strong>ScInputSignalParamsForHWTrigger</strong></a>* pParams：硬触发的输入信号参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25362-scsetparamsbyjson"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25362-scsetparamsbyjson" data-id="_25362-scsetparamsbyjson" class="anchor"><span>2.5.3.62. scSetParamsByJson</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetParamsByJson</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> pfilePath<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>从配置文件设置相机的参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">char</span>* pfilePath：配置文件路径</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25363-scgetdepthrangevalue"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25363-scgetdepthrangevalue" data-id="_25363-scgetdepthrangevalue" class="anchor"><span>2.5.3.63. scGetDepthRangeValue</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp">cStatus <span class="token function">scGetDepthRangeValue</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int16_t</span><span class="token operator">*</span> minValue<span class="token punctuation">,</span> <span class="token keyword">int16_t</span><span class="token operator">*</span> maxValue<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取设备当前工作模式下的深度范围</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int16_t</span>* minValue： 深度最小值</p><p><span style="color: #4ec9b0; font-weight: bold">int16_t</span>* maxValue： 深度最大值</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25364-scsettimesyncconfig"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25364-scsettimesyncconfig" data-id="_25364-scsettimesyncconfig" class="anchor"><span>2.5.3.64. scSetTimeSyncConfig</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetTimeSyncConfig</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> ScTimeSyncConfig params<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>设置时间同步的参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25217-sctimesyncconfig"><strong>ScTimeSyncConfig</strong></a> params: 时间同步参数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25365-scgettimesyncconfig"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25365-scgettimesyncconfig" data-id="_25365-scgettimesyncconfig" class="anchor"><span>2.5.3.65. scGetTimeSyncConfig</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetTimeSyncConfig</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> ScTimeSyncConfig<span class="token operator">*</span> pParams<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>获取时间同步的参数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25217-sctimesyncconfig"><strong>ScTimeSyncConfig</strong></a>* pParams: 时间同步参数 </p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25366-scgetdistancelevelcountofhdrmode"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25366-scgetdistancelevelcountofhdrmode" data-id="_25366-scgetdistancelevelcountofhdrmode" class="anchor"><span>2.5.3.66. scGetDistanceLevelCountOfHDRMode</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetDistanceLevelCountOfHDRMode</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pCount<span class="token punctuation">)</span><span class="token punctuation">;</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>在HDR模式下获取距离级别的计数</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span>* pCount: 距离级别计数</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25367-scsetexposuretimeofhdr"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25367-scsetexposuretimeofhdr" data-id="_25367-scsetexposuretimeofhdr" class="anchor"><span>2.5.3.67. scSetExposureTimeOfHDR</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scSetExposureTimeOfHDR</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">uint8_t</span> level<span class="token punctuation">,</span> <span class="token keyword">int32_t</span> exposureTime<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>在HDR模式下，设置深度传感器的曝光时间</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">uint8_t</span> level: HDR模式远近程度</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span> exposureTime: 曝光时间</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25368-scgetexposuretimeofhdr"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25368-scgetexposuretimeofhdr" data-id="_25368-scgetexposuretimeofhdr" class="anchor"><span>2.5.3.68. scGetExposureTimeOfHDR</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetExposureTimeOfHDR</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">uint8_t</span> level<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pExposureTime<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>在HDR模式下，获取深度传感器的曝光时间</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">uint8_t</span> level:  HDR模式远近程度</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span>* pExposureTime: 曝光时间</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p><h3 id="_25369-scgetmaxexposuretimeofhdr"><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_25369-scgetmaxexposuretimeofhdr" data-id="_25369-scgetmaxexposuretimeofhdr" class="anchor"><span>2.5.3.69. scGetMaxExposureTimeOfHDR</span></a></h3><p><strong>函数原型：</strong></p><pre v-pre="" data-lang="cpp"><code class="lang-cpp"><span class="token keyword">ScStatus</span> <span class="token function">scGetMaxExposureTimeOfHDR</span><span class="token punctuation">(</span><span class="token keyword">ScDeviceHandle</span> device<span class="token punctuation">,</span> <span class="token keyword">uint8_t</span> level<span class="token punctuation">,</span> <span class="token keyword">int32_t</span><span class="token operator">*</span> pMaxExposureTime<span class="token punctuation">)</span></code><button class="docsify-copy-code-button"><span class="label">Copy</span><span class="error" aria-hidden="hidden">Error</span><span class="success" aria-hidden="hidden">OK!</span><span aria-live="polite"></span></button></pre><p><strong>函数功能：</strong></p><p>在HDR模式下，获取深度传感器的最大曝光时间</p><p><strong>函数参数：</strong></p><p><span style="color: #4ec9b0; font-weight: bold">ScDeviceHandle</span> device： 设备句柄</p><p><span style="color: #4ec9b0; font-weight: bold">uint8_t</span> level:   HDR模式远近程度</p><p><span style="color: #4ec9b0; font-weight: bold">int32_t</span>* exposureTime: 曝光时间</p><p><strong>返回值：</strong></p><p><a href="http://localhost:3000/#/zh-cn/ScepterSDK/BaseSDK?id=_2514-scstatus"><strong>ScStatus</strong></a>：SC_OK 调用成功，其他值调用失败</p></div>
</div>
</article></section></main>
   <script>
      window.$docsify = {
         //侧边栏顶部标题
         name: "Scepter-Wiki",
         repo: "",
         // 开启侧边栏
         loadSidebar: true,
         subMaxLevel: 2,
         // set sidebar display level
         sidebarDisplayLevel: 1, 
         loadNavbar: true,
         //点击标题是否内容跳转到标题最顶端
         auto2top: true,

         //plugin1: 侧边栏全文搜索配置
         search: {
            // 过期时间，单位毫秒，默认一天
            maxAge: 86400000, 
            placeholder: 'Type to search',
            noData: 'No Results!',
            // 搜索标题的最大层级, 1 - 6
            depth: 6,
            // 是否隐藏其他侧边栏内容
            hideOtherSidebarContent: true, 
         },
         //plugin2: 代码段复制配置参数
         copyCode: {
            buttonText: 'Copy',
            errorText: 'Error',
            successText: 'OK!'
         },
         //plugin3: 文章标签页配置
         tabs: {
            persist: true,      // default
            sync: true,      // default
            theme: 'classic', // default
            tabComments: true,      // default
            tabHeadings: true       // default
         },
      };
   </script>
   <!-- Docsify v4 :default config 核心代码-->
   <script src="./2. BaseSDK (C_C++)_files/docsify@4.js.下载"></script>
   <!-- plugin1: 用于侧边栏对全文进行关键词搜索-->
   <script src="./2. BaseSDK (C_C++)_files/search.min.js.下载"></script>
   <!-- plugin2: 用于copy代码段代码-->
   <script src="./2. BaseSDK (C_C++)_files/docsify-copy-code.min.js.下载"></script>
   <!-- plugin3: 用于文章内容使用tab页-->
   <script src="./2. BaseSDK (C_C++)_files/docsify-tabs@1.js.下载"></script>
   <!-- plugin4: 用于代码段内容，根据代码类型高亮（无参数配置）。不同代码需要增加不同的插件-->
   <script src="./2. BaseSDK (C_C++)_files/prism-c.js.下载"></script>
   <script src="./2. BaseSDK (C_C++)_files/prism-cpp.js.下载"></script>
   <script src="./2. BaseSDK (C_C++)_files/prism-python.js.下载"></script>
   <script src="./2. BaseSDK (C_C++)_files/prism-csharp.js.下载"></script>
   <!-- plugin5: 用于点击放大图片功能（无参数配置）-->
   <script src="./2. BaseSDK (C_C++)_files/zoom-image.min.js.下载"></script>
   <!-- plugin6: 用于折叠左侧标题栏的层叠标题-->
   <script src="./2. BaseSDK (C_C++)_files/docsify-sidebar-collapse.min.js.下载"></script>

<script src="./2. BaseSDK (C_C++)_files/livereload.js.下载" async="" defer=""></script>

<div class="progress" style="opacity: 0; width: 0%;"></div></body></html>